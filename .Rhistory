knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readr)){install.packages("readr")}
options(scipen=10000)
appstoreGamesFile = "data/appstore_games.csv"
appstoreGamesDF = read_csv(appstoreGamesFile) %>% rename_all(~str_replace_all(., "\\s+", ""))
summary(appstoreGamesDF)
fixedAppstoreGamesDF <- appstoreGamesDF %>%
mutate(OriginalReleaseDate = as.Date(OriginalReleaseDate, "%d/%m/%Y")) %>%
mutate(CurrentVersionReleaseDate = as.Date(CurrentVersionReleaseDate, "%d/%m/%Y")) %>%
mutate(AgeRating = factor(AgeRating, levels=c('4+','9+', '12+', '17+')))
appstoreGamesDF <- fixedAppstoreGamesDF
appstoreGamesDF
summary(appstoreGamesDF)
appstoreGamesDF %>%
select(OriginalReleaseDate) %>%
mutate(OriginalReleaseYear = format(OriginalReleaseDate, "%Y")) %>%
group_by(OriginalReleaseYear) %>%
summarise(count = n()) %>%
ggplot(aes(x=OriginalReleaseYear, y=count)) +
geom_col() +
geom_text(aes(label=count), vjust=-0.25) +
ylab("Number of games released") +
xlab("Year of Release") +
theme_minimal()
appstoreGamesDF %>% select(-URL, -ID, -Subtitle, -IconURL, -Description) %>%
select(CurrentVersionReleaseDate) %>%
mutate(CurrentVersionRelease = format(CurrentVersionReleaseDate, "%Y")) %>%
group_by(CurrentVersionRelease) %>%
summarise(count = n()) %>%
ggplot(aes(x=CurrentVersionRelease, y=count)) +
geom_col() +
geom_text(aes(label=count), vjust=-0.25) +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal()
unique(appstoreGamesDF$AverageUserRating)
appstoreGamesDF %>%
select(AverageUserRating) %>%
filter(!is.na(AverageUserRating)) %>%
group_by(AverageUserRating) %>%
summarise(count = n()) %>%
ggplot(aes(x=AverageUserRating, y=count)) +
geom_col() +
geom_text(aes(label=count), vjust=-0.25) +
scale_x_continuous(breaks = seq(1,5,by=0.5)) +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal()
appstoreGamesDF %>%
select(AgeRating) %>%
arrange(AgeRating) %>%
group_by(AgeRating) %>%
summarise(count = n()) %>%
ggplot(aes(x=AgeRating, y=count)) +
geom_col() +
geom_text(aes(label=count), vjust=-0.25) +
theme_minimal()
appstoreGamesDF %>%
select(ID, Languages) %>%
separate_rows(Languages, sep=",") %>%
drop_na(Languages) %>%
group_by(Languages) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
top_n(20) %>%
ggplot(aes(x=reorder(Languages,desc(count)), y=count)) +
geom_col() +
geom_text(aes(label=count), vjust=-0.25, size=3.5) +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal()
appstoreGamesDF %>%
select(ID, Genres) %>%
separate_rows(Genres, sep=",") %>%
drop_na(Genres) %>%
group_by(Genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
top_n(20) %>%
ggplot(aes(x=reorder(Genres,desc(count)), y=count)) +
geom_col() +
geom_text(aes(label=count), vjust=-0.25, size=3.5) +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal() +
theme(axis.text.x = element_text(angle=90,vjust= 0.2,hjust=1))
appstoreGamesDF %>%
select(Size) %>%
filter(!is.na(Size))%>%
arrange(Size) %>%
ggplot(aes(x=Size)) +
geom_histogram(bins=30) +
theme_minimal()
appstoreGamesDF %>%
select(UserRatingCount) %>%
filter(!is.na(UserRatingCount))%>%
filter(UserRatingCount>=10000)%>%
arrange(UserRatingCount) %>%
ggplot(aes(x=UserRatingCount)) +
geom_histogram(bins=10) +
theme_minimal()
appstoreGamesDF %>%
select(Price) %>%
filter(!is.na(Price)) %>%
#(Price>00) %>%
ggplot(aes(x=Price))+
geom_histogram(bins=100)+
theme_minimal()
appstoreGamesDF %>%
select(ID,AgeRating, Genres) %>%
separate_rows(Genres, sep=",", convert = TRUE) %>%
mutate(Genres = trimws(Genres)) %>%
filter(Genres != "Strategy" & Genres != "Games" & Genres != "Entertainment") %>%
drop_na(Genres) %>%
group_by(AgeRating,Genres) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
top_n(n=5) %>%
#summarise(averageNumberOfLanguages = mean(numberOfLanguages)) %>%
ggplot(aes(x=AgeRating, y=count, fill=Genres)) +
geom_col(position = position_dodge(), width=0.9) +
#geom_text(aes(label=averageNumberOfLanguages), vjust=-0.25, size=3.5) +
scale_fill_brewer(palette="Set1") +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal()
appstoreGamesDF %>%
select(ID,AgeRating, Languages) %>%
separate_rows(Languages, sep=",", convert = TRUE) %>%
mutate(Languages = trimws(Languages)) %>%
# filter(Genres != "Strategy" & Genres != "Games" & Genres != "Entertainment") %>%
drop_na(Languages) %>%
group_by(AgeRating,Languages) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
top_n(n=7) %>%
ggplot(aes(x=AgeRating, y=count, fill=Languages)) +
geom_col(position = position_dodge(), width=0.9) +
geom_text(aes(label=Languages), vjust=-0.25, size=3.5, position = position_dodge(0.9)) +
scale_fill_brewer(palette="Set1") +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal() +
theme(legend.position = "none")
appstoreGamesDF %>%
select(ID,AgeRating, Languages) %>%
separate_rows(Languages, sep=",", convert = TRUE) %>%
mutate(Languages = trimws(Languages)) %>%
filter(Languages != "EN" & Languages != "ZH") %>%
drop_na(Languages) %>%
group_by(AgeRating,Languages) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
top_n(n=7) %>%
ggplot(aes(x=AgeRating, y=count, fill=Languages)) +
geom_col(position = position_dodge(), width=0.9) +
geom_text(aes(label=Languages), vjust=-0.25, size=3.5, position = position_dodge(0.9)) +
scale_fill_brewer(palette="Set1") +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal() +
theme(legend.position = "none")
# appstoreGamesDF %>%
#  select(ID,AgeRating, Languages) %>%
#  separate_rows(Languages, sep=",") %>%
#  drop_na(Languages) %>%
#  group_by(ID,AgeRating) %>%
#  summarise(numberOfLanguages = n())
#  arrange(desc(numberOfLanguages))
appstoreGamesDF %>%
select(ID,AgeRating, Languages) %>%
separate_rows(Languages, sep=",") %>%
drop_na(Languages) %>%
group_by(ID,AgeRating) %>%
summarise(numberOfLanguages = n()) %>%
#ungroup %>%
#group_by(AgeRating) %>%
#summarise(averageNumberOfLanguages = mean(numberOfLanguages)) %>%
ggplot(aes(x=AgeRating, y=numberOfLanguages)) +
geom_boxplot() +
geom_jitter(width = 0.3) +
#geom_text(aes(label=averageNumberOfLanguages), vjust=-0.25, size=3.5) +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
coord_cartesian(ylim=c(0,90)) +
theme_minimal()
appstoreGamesDF %>%
select(ID,AgeRating, Genres) %>%
separate_rows(Genres, sep=",") %>%
drop_na(Genres) %>%
group_by(ID,AgeRating) %>%
summarise(numberOfGenres = n()) %>%
#summarise(averageNumberOfLanguages = mean(numberOfLanguages)) %>%
ggplot(aes(x=AgeRating, y=numberOfGenres)) +
geom_boxplot() +
geom_jitter(width = 0.3) +
#geom_text(aes(label=averageNumberOfLanguages), vjust=-0.25, size=3.5) +
scale_y_continuous(expand = expand_scale(mult=c(0,0.05))) +
theme_minimal()
appstoreGamesDF %>%
drop_na(AverageUserRating) %>%
arrange(AverageUserRating) %>%
pull(AverageUserRating) %>%
unique() -> AverageUserRatingLevels #Get a vector containing all possible user rating levels in sequential order.
appstoreGamesDF %>%
select(ID,AgeRating, AverageUserRating) %>%
drop_na(AverageUserRating) %>%
mutate(AverageUserRating = factor(AverageUserRating, levels = AverageUserRatingLevels)) %>%
group_by(AgeRating, AverageUserRating) %>%
summarise(count = n()) %>%
mutate(freq = count / sum(count)) %>%
ggplot(aes(x=reorder(AgeRating,desc(AgeRating)), y=freq, fill=AverageUserRating)) +
geom_col(position = position_stack(reverse = TRUE))  +
scale_fill_brewer(palette = "RdYlGn") +
geom_text(aes(label=count), size=4 ,position=position_stack(vjust = .5, reverse = TRUE)) +
theme_minimal() +
xlab("Age Rating") +
ylab("Proportion (%)") +
labs(fill="Average\nUser Rating") +
coord_flip()
fixedAppstoreGamesDF <- appstoreGamesDF %>%
mutate(OriginalReleaseDate = as.Date(OriginalReleaseDate, "%d/%m/%Y")) %>%
mutate(CurrentVersionReleaseDate = as.Date(CurrentVersionReleaseDate, "%d/%m/%Y")) %>%
mutate(AgeRating = factor(AgeRating, levels=c('4+','9+', '12+', '17+')))
appstoreGamesDF <- fixedAppstoreGamesDF
datatable(appstoreGamesDF)
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readr)){install.packages("readr")}
if(!require(DT)){install.packages("DT")}
options(scipen=10000)
appstoreGamesFile = "data/appstore_games.csv"
appstoreGamesDF = read_csv(appstoreGamesFile) %>% rename_all(~str_replace_all(., "\\s+", ""))
summary(appstoreGamesDF)
install.packages("DT")
install.packages("DT")
install.packages("DT")
install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readr)){install.packages("readr")}
if(!require(DT)){install.packages("DT")}
options(scipen=10000)
appstoreGamesFile = "data/appstore_games.csv"
appstoreGamesDF = read_csv(appstoreGamesFile) %>% rename_all(~str_replace_all(., "\\s+", ""))
summary(appstoreGamesDF)
fixedAppstoreGamesDF <- appstoreGamesDF %>%
mutate(OriginalReleaseDate = as.Date(OriginalReleaseDate, "%d/%m/%Y")) %>%
mutate(CurrentVersionReleaseDate = as.Date(CurrentVersionReleaseDate, "%d/%m/%Y")) %>%
mutate(AgeRating = factor(AgeRating, levels=c('4+','9+', '12+', '17+')))
appstoreGamesDF <- fixedAppstoreGamesDF
datatable(appstoreGamesDF)
